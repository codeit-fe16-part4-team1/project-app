name: PR Preview to EC2

on:
  push:

jobs:
  continuous-deployment:
    runs-on: ubuntu-latest
    steps:
      # 1) GitHub 저장소 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2) 브랜치명 & 포트 계산
      - name: Compute branch name & port
        id: meta
        run: |
          RAW="${{ github.ref_name }}"
          SANITIZED="$(echo "$RAW" | tr '[:upper:]' '[:lower:]' | sed 's#[^a-z0-9._-]#-#g')"
          PORT=$(( 5000 + $(echo -n "$SANITIZED" | cksum | awk '{print $1 % 1000}') ))
          echo "name=$SANITIZED" >> $GITHUB_OUTPUT
          echo "port=$PORT" >> $GITHUB_OUTPUT

      # 3) 소스 패키징
      - name: Pack source (git archive snapshot)
        run: |
          git archive --format=tar HEAD | gzip > app.tar.gz

      # 4) EC2에 배포
      - name: Copy & Deploy on EC2
        env:
          BRANCH: ${{ steps.meta.outputs.name }}
          PORT: ${{ steps.meta.outputs.port }}
          DOMAIN: ${{ secrets.PREVIEW_DOMAIN }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "${EC2_SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # 앱 아카이브만 전송 (로컬에서 만든 conf는 보내지 않음)
          scp -o StrictHostKeyChecking=no app.tar.gz ubuntu@"${EC2_HOST}":/tmp/

          ssh -o StrictHostKeyChecking=no ubuntu@"${EC2_HOST}" "bash -lc '
          set -euo pipefail
          BRANCH=\"${BRANCH}\"
          BASE_PORT=\"${PORT}\"
          DOMAIN=\"${DOMAIN}\"
          APP_DIR=\"/var/www/preview/\${BRANCH}\"

          # 앱 디렉토리
          sudo mkdir -p \"\${APP_DIR}\"
          sudo chown -R ubuntu:ubuntu \"\${APP_DIR}\"

          # 코드 전개
          tar -xzf /tmp/app.tar.gz -C \"\${APP_DIR}\"
          rm -f /tmp/app.tar.gz

          cd \"\${APP_DIR}\"
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
          npm run build

          # ===== 포트 할당: BASE_PORT ~ BASE_PORT+50 사이에서 빈 포트 찾기 =====
          pick_port() {
            local start=\$1
            local end=\$((start+50))
            local p
            for p in \$(seq \$start \$end); do
              if ! sudo lsof -nP -iTCP:\$p -sTCP:LISTEN >/dev/null 2>&1; then
                echo \$p; return 0
              fi
            done
            return 1
          }
          FINAL_PORT=\$(pick_port \"\${BASE_PORT}\") || { echo \"No free port near \${BASE_PORT}\"; exit 1; }
          echo \"[INFO] Using port \${FINAL_PORT} for \${BRANCH}\"

          # ===== 기존 프로세스/포트 정리 =====
          pm2 delete \"preview-\${BRANCH}\" || true
          # 혹시 같은 포트를 쓰는 잔존 프로세스가 있으면 강제 종료
          sudo fuser -k \${FINAL_PORT}/tcp || true

          # ===== PM2로 Next.js 시작 =====
          pm2 start \"node_modules/.bin/next start -p \${FINAL_PORT}\" --name \"preview-\${BRANCH}\"
          pm2 save

          # ===== Nginx vhost를 최종 포트로 생성 =====
          export BRANCH DOMAIN FINAL_PORT

          CONF=$'server {\n'\
          $'    listen 80;\n'\
          $'    server_name ${BRANCH}.preview.${DOMAIN};\n'\
          $'    return 301 https://\\$host\\$request_uri;\n'\
          $'}\n'\
          $'\n'\
          $'server {\n'\
          $'    listen 443 ssl http2;\n'\
          $'    server_name ${BRANCH}.preview.${DOMAIN};\n'\
          $'\n'\
          $'    ssl_certificate     /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;\n'\
          $'    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;\n'\
          $'\n'\
          $'    ssl_protocols       TLSv1.2 TLSv1.3;\n'\
          $'    ssl_ciphers         HIGH:!aNULL:!MD5;\n'\
          $'    ssl_prefer_server_ciphers on;\n'\
          $'\n'\
          $'    location / {\n'\
          $'        proxy_http_version 1.1;\n'\
          $'        proxy_set_header Host \\$host;\n'\
          $'        proxy_set_header X-Real-IP \\$remote_addr;\n'\
          $'        proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n'\
          $'        proxy_set_header X-Forwarded-Proto \\$scheme;\n'\
          $'        proxy_set_header Upgrade \\$http_upgrade;\n'\
          $'        proxy_set_header Connection "upgrade";\n'\
          $'        proxy_pass http://127.0.0.1:${FINAL_PORT};\n'\
          $'    }\n'\
          $'}\n'

          # BRANCH/DOMAIN/FINAL_PORT만 치환 (Nginx 변수들은 \$로 이스케이프해서 그대로 유지)
          printf "%s" "$CONF" \
            | envsubst '${BRANCH} ${DOMAIN} ${FINAL_PORT}' \
            | sudo tee "/etc/nginx/conf.d/preview-${BRANCH}.conf" >/dev/null

          sudo nginx -t
          sudo systemctl reload nginx

          echo \"[INFO] Preview URL: https://\${BRANCH}.preview.\${DOMAIN}\"
          echo \"[INFO] Upstream port: \${FINAL_PORT}\"
          '"

      # 6) 미리보기 URL 출력
      - name: Output Preview URL
        env:
          BRANCH: ${{ steps.meta.outputs.name }}
          DOMAIN: ${{ vars.PREVIEW_DOMAIN }}
        run: echo "https://${BRANCH}.preview.${DOMAIN}"
