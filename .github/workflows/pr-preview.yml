name: PR Preview to EC2

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]

jobs:
  continuous-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute branch name & port
        id: meta
        run: |
          RAW="${{ github.head_ref }}"
          # 소문자 + 안전문자만 남기기
          SANITIZED="$(echo "$RAW" | tr '[:upper:]' '[:lower:]' | sed 's#[^a-z0-9._-]#-#g')"
          # 5000~5999 범위 포트 고정 생성(브랜치 해시 기반)
          PORT=$(( 5000 + $(echo -n "$SANITIZED" | cksum | awk '{print $1 % 1000}') ))
          echo "name=$SANITIZED" >> $GITHUB_OUTPUT
          echo "port=$PORT" >> $GITHUB_OUTPUT

      - name: Pack source (git archive snapshot)
        run: |
          git archive --format=tar HEAD | gzip > app.tar.gz

      - name: Create Nginx config locally
        env:
          BRANCH: ${{ steps.meta.outputs.name }}
          PORT: ${{ steps.meta.outputs.port }}
          DOMAIN: ${{ secrets.PREVIEW_DOMAIN }}
        run: |
          cat > preview-${BRANCH}.conf <<EOF
          server {
            listen 80;
            server_name ${BRANCH}.preview.${DOMAIN};

            location / {
              proxy_http_version 1.1;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
              proxy_set_header Upgrade \$http_upgrade;
              proxy_set_header Connection "upgrade";
              proxy_pass http://127.0.0.1:${PORT};
            }
          }
          EOF

      - name: Copy & Deploy on EC2
        env:
          BRANCH: ${{ steps.meta.outputs.name }}
          PORT: ${{ steps.meta.outputs.port }}
          DOMAIN: ${{ secrets.PREVIEW_DOMAIN }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "${EC2_SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # 앱과 conf 파일 모두 전송
          scp -o StrictHostKeyChecking=no app.tar.gz preview-${BRANCH}.conf ubuntu@"${EC2_HOST}":/tmp/

          ssh -o StrictHostKeyChecking=no ubuntu@"${EC2_HOST}" "sudo bash -lc '
          set -euo pipefail
          BRANCH=\"${BRANCH}\"
          PORT=\"${PORT}\"
          DOMAIN=\"${DOMAIN}\"
          APP_DIR=\"/var/www/preview/\${BRANCH}\"

          mkdir -p \"\${APP_DIR}\"
          chown -R ubuntu:ubuntu \"\${APP_DIR}\"
          tar -xzf /tmp/app.tar.gz -C \"\${APP_DIR}\"
          rm -f /tmp/app.tar.gz

          # Nginx 설정 이동
          mv /tmp/preview-\${BRANCH}.conf /etc/nginx/conf.d/

          cd \"\${APP_DIR}\"
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
          npm run build

          pm2 delete \"preview-\${BRANCH}\" || true
          PORT=\${PORT} pm2 start node_modules/next/dist/bin/next --name \"preview-\${BRANCH}\" -- start -p \${PORT}
          pm2 save

          nginx -t
          systemctl reload nginx
          '"

      - name: Output Preview URL
        env:
          BRANCH: ${{ steps.meta.outputs.name }}
          DOMAIN: ${{ secrets.PREVIEW_DOMAIN }}
        run: echo "https://${BRANCH}.preview.${DOMAIN}"
